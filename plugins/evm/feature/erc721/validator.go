package erc721

import (
	"context"
	"github.com/ethereum/go-ethereum/log"
	"github.com/itering/subscan/pkg/go-web3"
	"github.com/itering/subscan/pkg/go-web3/complex/types"
	"github.com/itering/subscan/pkg/go-web3/dto"
	"github.com/itering/subscan/util"
	"math/big"
)

// https://github.com/nibbstack/erc721-validator
const (
	DataBasic = "0x608060405234801561001057600080fd5b50604051610c0e380380610c0e833981810160405281019061003291906108b1565b600182141561004f5761004a8161016b60201b60201c565b610164565b600282141561006c57610067816101c960201b60201c565b610164565b6003821415610089576100848161026b60201b60201c565b610164565b60048214156100a6576100a18161031160201b60201c565b610164565b60058214156100c3576100be816103b760201b60201c565b610164565b60068214156100e0576100db8161045d60201b60201c565b610164565b60078214156100fd576100f8816104eb60201b60201c565b610164565b600882141561011a576101158161057260201b60201c565b610164565b600982141561013757610132816105f960201b60201c565b610164565b600a8214156101545761014f8161068660201b60201c565b610164565b600061016357610162610aaf565b5b5b5050610b77565b60008173ffffffffffffffffffffffffffffffffffffffff1631101561019057600080fd5b6101b98173ffffffffffffffffffffffffffffffffffffffff1661071460201b6100091760201c565b6101c6576101c5610aaf565b5b50565b60008173ffffffffffffffffffffffffffffffffffffffff166301ffc9a78060e01b6040518263ffffffff1660e01b81526004016102079190610939565b60206040518083038186803b15801561021f57600080fd5b505afa158015610233573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610257919061080e565b90508061026757610266610aaf565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b81526004016102ad9190610939565b60206040518083038186803b1580156102c557600080fd5b505afa1580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd919061080e565b90508061030d5761030c610aaf565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff166301ffc9a7635b5e139f60e01b6040518263ffffffff1660e01b81526004016103539190610939565b60206040518083038186803b15801561036b57600080fd5b505afa15801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a3919061080e565b9050806103b3576103b2610aaf565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff166301ffc9a763780e9d6360e01b6040518263ffffffff1660e01b81526004016103f99190610939565b60206040518083038186803b15801561041157600080fd5b505afa158015610425573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610449919061080e565b90508061045957610458610aaf565b5b5050565b8073ffffffffffffffffffffffffffffffffffffffff166370a0823160006040518263ffffffff1660e01b8152600401610497919061091e565b60206040518083038186803b1580156104af57600080fd5b505afa1580156104c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e79190610884565b5050565b8073ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561053157600080fd5b505afa158015610545573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061056e919061083b565b5050565b8073ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156105b857600080fd5b505afa1580156105cc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105f5919061083b565b5050565b60008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561064157600080fd5b505afa158015610655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106799190610884565b1161068357600080fd5b50565b8073ffffffffffffffffffffffffffffffffffffffff16634f6ccce760006040518263ffffffff1660e01b81526004016106c09190610954565b60206040518083038186803b1580156106d857600080fd5b505afa1580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190610884565b5050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156107565750808214155b92505050919050565b600061077261076d84610994565b61096f565b90508281526020810184848401111561078e5761078d610b12565b5b610799848285610a4b565b509392505050565b6000815190506107b081610b32565b92915050565b6000815190506107c581610b49565b92915050565b600082601f8301126107e0576107df610b0d565b5b81516107f084826020860161075f565b91505092915050565b60008151905061080881610b60565b92915050565b60006020828403121561082457610823610b1c565b5b6000610832848285016107b6565b91505092915050565b60006020828403121561085157610850610b1c565b5b600082015167ffffffffffffffff81111561086f5761086e610b17565b5b61087b848285016107cb565b91505092915050565b60006020828403121561089a57610899610b1c565b5b60006108a8848285016107f9565b91505092915050565b600080604083850312156108c8576108c7610b1c565b5b60006108d6858286016107f9565b92505060206108e7858286016107a1565b9150509250929050565b6108fa816109c5565b82525050565b610909816109e3565b82525050565b61091881610a39565b82525050565b600060208201905061093360008301846108f1565b92915050565b600060208201905061094e6000830184610900565b92915050565b6000602082019050610969600083018461090f565b92915050565b600061097961098a565b90506109858282610a7e565b919050565b6000604051905090565b600067ffffffffffffffff8211156109af576109ae610ade565b5b6109b882610b21565b9050602081019050919050565b60006109d082610a0f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a4482610a2f565b9050919050565b60005b83811015610a69578082015181840152602081019050610a4e565b83811115610a78576000848401525b50505050565b610a8782610b21565b810181811067ffffffffffffffff82111715610aa657610aa5610ade565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610b3b816109c5565b8114610b4657600080fd5b50565b610b52816109d7565b8114610b5d57600080fd5b50565b610b6981610a2f565b8114610b7457600080fd5b50565b608980610b856000396000f3fe6080604052600080fd5b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015604a5750808214155b9250505091905056fea26469706673582212207f21437ecbfd93ff1a6ecc6359fcc9e7f0e0055bfab96e450e64a2d982f6845d64736f6c63430008070033"
	DataToken = "0x608060405234801561001057600080fd5b506040516106f63803806106f68339818101604052810190610032919061045b565b60018314156100505761004b82826100a460201b60201c565b61009c565b600283141561006e57610069828261013760201b60201c565b61009c565b600383141561008c57610087828261025860201b60201c565b61009c565b600061009b5761009a6105f8565b5b5b5050506106a9565b8173ffffffffffffffffffffffffffffffffffffffff1663c87b56dd826040518263ffffffff1660e01b81526004016100dd91906104e7565b60006040518083038186803b1580156100f557600080fd5b505afa158015610109573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061013291906103e5565b505050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a082318473ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161018e91906104e7565b60206040518083038186803b1580156101a657600080fd5b505afa1580156101ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101de91906103b8565b6040518263ffffffff1660e01b81526004016101fa91906104cc565b60206040518083038186803b15801561021257600080fd5b505afa158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a919061042e565b1161025457600080fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016102a991906104e7565b60206040518083038186803b1580156102c157600080fd5b505afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f991906103b8565b73ffffffffffffffffffffffffffffffffffffffff16141561031a57600080fd5b5050565b600061033161032c84610527565b610502565b90508281526020810184848401111561034d5761034c61065b565b5b610358848285610594565b509392505050565b60008151905061036f8161067b565b92915050565b600082601f83011261038a57610389610656565b5b815161039a84826020860161031e565b91505092915050565b6000815190506103b281610692565b92915050565b6000602082840312156103ce576103cd610665565b5b60006103dc84828501610360565b91505092915050565b6000602082840312156103fb576103fa610665565b5b600082015167ffffffffffffffff81111561041957610418610660565b5b61042584828501610375565b91505092915050565b60006020828403121561044457610443610665565b5b6000610452848285016103a3565b91505092915050565b60008060006060848603121561047457610473610665565b5b6000610482868287016103a3565b935050602061049386828701610360565b92505060406104a4868287016103a3565b9150509250925092565b6104b781610558565b82525050565b6104c68161058a565b82525050565b60006020820190506104e160008301846104ae565b92915050565b60006020820190506104fc60008301846104bd565b92915050565b600061050c61051d565b905061051882826105c7565b919050565b6000604051905090565b600067ffffffffffffffff82111561054257610541610627565b5b61054b8261066a565b9050602081019050919050565b60006105638261056a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156105b2578082015181840152602081019050610597565b838111156105c1576000848401525b50505050565b6105d08261066a565b810181811067ffffffffffffffff821117156105ef576105ee610627565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61068481610558565b811461068f57600080fd5b50565b61069b8161058a565b81146106a657600080fd5b50565b603f806106b76000396000f3fe6080604052600080fdfea2646970667358221220fb6bb4429466e5748f997ce9f56761eac1ff6734a6558c03e3b684cddf18a59d64736f6c63430008070033" //nolint:golint
)

// BaseVerify Valid erc721 verify https://medium.com/hackernoon/https-medium-com-momannn-live-testing-smart-contracts-with-estimategas-f45429086c3a
func BaseVerify(ctx context.Context, w3 *web3.Web3, contact string, billionAddress string, tokenId string) bool {
	if billionAddress == "" {
		return false
	}
	// base sol abi constructor
	// [{"inputs":[{"internalType":"uint256","name":"_caseId","type":"uint256"},{"internalType":"address","name":"_target","type":"address"}],"stateMutability":"nonpayable","type":"constructor"}]
	data := DataBasic +
		util.Padding("1") +
		util.Padding(contact)
	gas, err := w3.Eth.EstimateGas(ctx, &dto.TransactionParameters{Data: types.ComplexString(data), From: billionAddress})
	if err != nil {
		log.Error(err.Error())
		return false
	}
	if base := gas.Cmp(big.NewInt(0)) > 0; !base {
		return false
	}
	data = DataToken + util.Padding("2") + util.Padding(contact) + util.Padding(tokenId)
	gas, err = w3.Eth.EstimateGas(ctx, &dto.TransactionParameters{Data: types.ComplexString(data), From: billionAddress})
	if err != nil {
		log.Error(err.Error())
		return false
	}
	return gas.Cmp(big.NewInt(0)) > 0
}
