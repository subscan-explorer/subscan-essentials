package feature

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_GenTransactionHash(t *testing.T) {
	data := `{"Legacy":{"action":{"Call":"0xd559f39a22f34b60475d82c93798c737aa4c9b0f"},"gas_limit":"1579072","gas_price":"249614413213","input":"0x30cdd8dd0000000000000000000000000000000000000000000000000000024d3f6f5c000000000000000000000000000000000000000000000001c2fff56ba7d7e85680000000000000000000000000000000000000000000000000000000006749d840","nonce":"118","signature":{"r":"0xa464e8cd1780e44ec01af20e76b1cb384029f29d4cbfa29b271f4edc02d5bb37","s":"0x4a7d19c1bb6175019ba4b7a72093a95c89700770daa4ca54167cc1ed9ae31532","v":2603},"value":"0"}}`
	assert.Equal(t, CalTransactionHash(context.TODO(), []byte(data)), "0x7da67a9b661a5d6e10d5461640317f77dc8d66382a801706fc64018f6b3c0192")
	data = `{"Legacy":{"action":{"Call":"0x6397874a06ae9540c9e153f9b0d25cc64708a70a"},"gas_limit":"3222111","gas_price":"1264287435660","input":"0x4edd263400000000000000000000000000000000000000000000000000000000000000400000000000000000000000004b202ad61d8242831b01cecc26328b25533030f400000000000000000000000000000000000000000000000000000000000000a00000000000000000000000004b202ad61d8242831b01cecc26328b25533030f4000000000000000000000000000000000000000000000000000000006749d60b000000000000000000000000000000000000000000000000000001b8875b553f000000000000000000000000000000000000000000000000000000006393e5820000000000000000000000000000000000000000000000000000000000000028ffffffff1fcacbd218edc0eba20fc2308c778080ffffffffea09fb06d082fd1275cd48b191cbcd1d000000000000000000000000000000000000000000000000","nonce":"7931","signature":{"r":"0x9b13398bb72ef17978c901f4369c5b6266704328192a4cb70e704d8f10872247","s":"0x736d298b4120c863f5ec44f4808bdf26b400b2e43987b554ec8b2318de1ab5b5","v":2604},"value":"0"}}`
	assert.Equal(t, CalTransactionHash(context.TODO(), []byte(data)), "0x12e3691e7d0a9750955a138668e421cc190a07321f2c46cf538a581556e1dd84")
	data = `{"EIP1559":{"access_list":null,"action":{"Call":"0x7487b04899c2572a223a8c6ec9ba919e27bbcd36"},"chain_id":1284,"gas_limit":"582957","input":"0x151fd8f30000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000145635172bbe3fc20319b2007fc08decbd5fa3b83a44991f51d8a2cde70f0fb7180cb1b960145d02cc3f51af31363717b9d7882b5b0f37e6c5db1519bad3de9f33adb9c00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000042697066733a2f2f6261667962656967323768337a71757a79653277727a696d74797a7179613577647a74333273657a646c64667176706d71626a7664616e6b6e6d71000000000000000000000000000000000000000000000000000000000000","max_fee_per_gas":"250000000000","max_priority_fee_per_gas":"0","nonce":"189185","odd_y_parity":false,"r":"0x7bf7d0a57a1abe16184d92df16242b4370d2ec6a009d93255a3469ccdc790c8f","s":"0x3766d24609f656f50ad7e4514be219892bfb7293f1796b0a38f2fe2c8013eb12","value":"0"}}`
	assert.Equal(t, CalTransactionHash(context.TODO(), []byte(data)), "0x51a701cc465c81064ffd6b1a86361708987179007eb508a762f6bb1cfe94ef4d")
	data = `{"EIP1559":{"access_list":null,"action":{"Call":"0x7487b04899c2572a223a8c6ec9ba919e27bbcd36"},"chain_id":1284,"gas_limit":"582957","input":"0x151fd8f30000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000145635172bbe3fc20319b2007fc08decbd5fa3b83a44991f51d8a2cde70f0fb7180cb1b960145d02cc3f51af31363717b9d7882b5b0f37e6c5db1519bad3de9f33adb9c00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000042697066733a2f2f6261667962656967323768337a71757a79653277727a696d74797a7179613577647a74333273657a646c64667176706d71626a7664616e6b6e6d71000000000000000000000000000000000000000000000000000000000000","max_fee_per_gas":"250000000000","max_priority_fee_per_gas":"0","nonce":"41127","odd_y_parity":false,"r":"0x6feb18748a11b9f86c5a3ab72eca066a56dbdf5b6b24c211a63af1d854b98ebf","s":"0x5696936ae5f697397c11c5ab9f87749d518ce2415cda395fe690bc1bed2358c6","value":"0"}}`
	assert.Equal(t, CalTransactionHash(context.TODO(), []byte(data)), "0xd556360e12a0916a1bf0157e5045b7056f154784f195d2c94c0471e29c73e475")
}

func Test_TransactionRaw(t *testing.T) {
	rawTxHex := "0x02f8d384190f1b45388203e88203e8861a9a5c267c5c943057843059c48e75681442408c8d629ccb481b5b80b8647c9cd2bc000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000036173640000000000000000000000000000000000000000000000000000000000c080a09f8bfed4eacda701a2538340d96b5d74ac1ca7ba37072f98f20879faaf6bf761a05587e3e3a196155b7ebede1bc53f026e20218b49c81a585d844c09b1dbd43207"
	assert.Equal(t, CalHashByTxRaw(context.TODO(), rawTxHex), "0xccf4ea834566a91f28ba901897e53331b6ae60e4bc24d7e2c1df43edd75b8914")
}
